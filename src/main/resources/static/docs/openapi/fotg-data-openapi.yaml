openapi: "3.0.2"
info:
  title: Fall of the Gods API
  version: "1.0.4"
servers:
  - url: https://fallofthegods-data.onrender.com/
    description: Production server
  - url: http://localhost:8003/
    description: Local server
paths:
  /{api-key}/characters/story/get:
    get:
      description: Get one character from the story.
      operationId: getStoryCharacter
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Identifier for the character.
      responses:
        "200":
          description: OK
      tags:
        - Characters
  /{api-key}/characters/story/list:
    get:
      description: Get a list of all characters from the story.
      operationId: listStoryCharacters
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Characters
  /{api-key}/characters/game/get:
    get:
      description: Get one character from the game.
      operationId: getGameCharacter
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Identifier for the character.
      responses:
        "200":
          description: OK
      tags:
        - Characters
  /{api-key}/characters/game/list:
    get:
      description: Get a list of all characters from the game.
      operationId: listGameCharacters
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Characters

# ========================================================================= #

  /{api-key}/worlds/get:
    get:
      description: Get one world.
      operationId: getWorld
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Identifier for the world.
      responses:
        "200":
          description: OK
      tags:
        - Worlds
  /{api-key}/worlds/list:
    get:
      description: Get a list of all worlds.
      operationId: listWorlds
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Worlds
  /{api-key}/worlds/places/get:
    get:
      description: Get one place from a specific world.
      operationId: getWorldPlace
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: idWorld
          required: true
          schema:
            type: string
          description: Identifier for the world.
        - in: query
          name: idPlace
          required: true
          schema:
            type: string
          description: Identifier for the place.
      responses:
        "200":
          description: OK
      tags:
        - Worlds
  /{api-key}/worlds/places/list:
    get:
      description: Get a list of all places from a specific world.
      operationId: listWorldPlaces
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: id
          required: true
          schema:
            type: string
          description: Identifier for the world.
      responses:
        "200":
          description: OK
      tags:
        - Worlds
  /{api-key}/worlds/places/listAll:
    get:
      description: Get a list of all places.
      operationId: listWorldAllPlaces
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Worlds

# ========================================================================= #

  /{api-key}/items/story/get:
    get:
      description: Get one item from the story.
      operationId: getStoryItem
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: idWorld
          required: true
          schema:
            type: string
          description: Identifier for the item.
      responses:
        "200":
          description: OK
      tags:
        - Items
  /{api-key}/items/story/list:
    get:
      description: Get a list of all items from the story.
      operationId: listStoryItems
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Items
  /{api-key}/items/game/get:
    get:
      description: Get one item from the game.
      operationId: getGameItem
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: idWorld
          required: true
          schema:
            type: string
          description: Identifier for the item.
      responses:
        "200":
          description: OK
      tags:
        - Items
  /{api-key}/items/game/list:
    get:
      description: Get a list of all items from the game.
      operationId: listGameItems
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Items

# ========================================================================= #
        
  /{api-key}/story/get:
    get:
      description: Get one story.
      operationId: getStory
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
        - in: query
          name: idWorld
          required: true
          schema:
            type: string
          description: Identifier for the story.
      responses:
        "200":
          description: OK
      tags:
        - Stories
  /{api-key}/story/list:
    get:
      description: Get a list of all stories.
      operationId: listStories
      parameters:
        - in: path
          name: api-key
          required: true
          schema:
            type: string
          description: API key for authentication.
      responses:
        "200":
          description: OK
      tags:
        - Stories